//
//  ListArticleRouter.swift
//  ListArticleCap
//
//  Created by Chris on 13/05/2020.
//  Copyright (c) 2020 Chris78. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListArticleRoutingLogic {
  func routeToShowArticle(segue: UIStoryboardSegue?)
}

protocol ListArticleDataPassing {
  var dataStore: ListArticleDataStore? { get }
}

class ListArticleRouter: NSObject, ListArticleRoutingLogic, ListArticleDataPassing {
  weak var viewController: ListArticleViewController?
  var dataStore: ListArticleDataStore?

  // MARK: Routing

  func routeToShowArticle(segue: UIStoryboardSegue?) {
    if let segue = segue {
        guard let destinationVC = segue.destination as? ShowArticleViewController else {
            return
        }
      var destinationDS = destinationVC.router!.dataStore!
      passDataToShowArticle(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
        guard let destinationVC = storyboard.instantiateViewController(
            withIdentifier: "ShowArticleViewController") as? ShowArticleViewController else {
            return
        }
      var destinationDS = destinationVC.router!.dataStore!
      passDataToShowArticle(source: dataStore!, destination: &destinationDS)
      navigateToShowArticle(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation

  func navigateToShowArticle(source: ListArticleViewController, destination: ShowArticleViewController) {
    source.show(destination, sender: nil)
  }

  // MARK: Passing data

  func passDataToShowArticle(source: ListArticleDataStore, destination: inout ShowArticleDataStore) {
    let selectedRow = viewController?.tableView.indexPathForSelectedRow?.row
    destination.article = source.articles?[selectedRow!]
  }
}
