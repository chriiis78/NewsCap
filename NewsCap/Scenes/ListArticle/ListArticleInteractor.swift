//
//  ListArticleInteractor.swift
//  ListArticleCap
//
//  Created by Chris on 13/05/2020.
//  Copyright (c) 2020 Chris78. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListArticleBusinessLogic {
    func fetchArticles(request: ListArticle.FetchArticles.Request)
    //var filteredArticles: [Article] { get set }
}

protocol ListArticleDataStore {
    var articles: [Article]? { get }
}

class ListArticleInteractor: ListArticleBusinessLogic, ListArticleDataStore {
    //var filteredArticles: [Article] = []
    var articles: [Article]?
    /*{
        didSet {
            if let articles = articles {
                filteredArticles = articles
            }
        }
    }
    */
    var presenter: ListArticlePresentationLogic?
    var worker: ListArticleWorker?
    var articlesWorker = ArticlesWorker()

    // MARK: List Articles

    func fetchArticles(request: ListArticle.FetchArticles.Request) {
        articlesWorker.fetch(success: { response in
            self.articles = response.articles
            let resp = ListArticle.FetchArticles.Response(
                articles: response.articles,
                isError: response.isError,
                message: response.message)
            self.presenter?.presentArticles(response: resp)
            //self.fetchArticlesImage()
        }, fail: { error in
            let resp = ListArticle.FetchArticles.Response(
                articles: [],
                isError: error.isError,
                message: error.message)
            self.presenter?.presentArticles(response: resp)
        })
    }
}
