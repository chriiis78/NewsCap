//
//  ListArticlePresenter.swift
//  ListArticleCap
//
//  Created by Chris on 13/05/2020.
//  Copyright (c) 2020 Chris78. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListArticlePresentationLogic
{
    func presentArticles(response: ListArticle.Fetch.Response)
    func presentArticleImage(response: ListArticle.FetchImage.Response)
}

class ListArticlePresenter: ListArticlePresentationLogic
{
    weak var viewController: ListArticleDisplayLogic?
    
    // MARK: Do something
    
    func presentArticles(response: ListArticle.Fetch.Response)
    {
        var displayArticles = [ListArticle.Fetch.ViewModel.DisplayArticle]()
        
        for article in response.articles {
            let imageUrl = article.urlToImage ?? ""
            let title = article.title ?? ""
            
            var description = ""
            if let desc = article.description, !desc.isEmpty {
                description = desc
            }
            else {
                description = article.content ?? ""
            }
            
            let displayArticle = ListArticle.Fetch.ViewModel.DisplayArticle(imageUrl: imageUrl, title: title, description: description)
            displayArticles.append(displayArticle)
        }
        
        let viewModel = ListArticle.Fetch.ViewModel(DisplayArticles: displayArticles, isError: response.isError, message: response.message)
        viewController?.displayArticles(viewModel: viewModel)
    }
    
    func presentArticleImage(response: ListArticle.FetchImage.Response) {
        
        let viewModel = ListArticle.FetchImage.ViewModel(index: response.index, image: response.image)
        
        viewController?.displayArticleImage(viewModel: viewModel)
    }
}

