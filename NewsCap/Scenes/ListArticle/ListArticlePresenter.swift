//
//  ListArticlePresenter.swift
//  ListArticleCap
//
//  Created by Chris on 13/05/2020.
//  Copyright (c) 2020 Chris78. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListArticlePresentationLogic {
    func presentArticles(response: ListArticle.Fetch.Response)
    func presentError(response: ListArticle.Fetch.Response)
}

class ListArticlePresenter: ListArticlePresentationLogic {
    weak var viewController: ListArticleDisplayLogic?

    // MARK: Present Articles

    func presentArticles(response: ListArticle.Fetch.Response) {
        guard let articles = response.articles else {
            return
        }
        var displayArticles = [ListArticle.Fetch.ViewModel.DisplayArticle]()

        for article in articles {
            let imageUrl = article.urlToImage ?? ""
            let title = article.title ?? ""

            var description = ""
            if let desc = article.description, !desc.isEmpty {
                description = desc
            } else {
                description = article.content ?? ""
            }

            let displayArticle = ListArticle.Fetch.ViewModel.DisplayArticle(
                imageUrl: imageUrl,
                title: title,
                description: description)
            displayArticles.append(displayArticle)
        }

        let viewModel = ListArticle.Fetch.ViewModel(displayArticles: displayArticles)
        viewController?.displayArticles(viewModel: viewModel)
    }

    func presentError(response: ListArticle.Fetch.Response) {
        let viewModel = ListArticle.Fetch.ViewModel.Error(
            errorMessage: response.errorMessage ?? "Error Fetching Articles")
        viewController?.displayError(viewModel: viewModel)
    }
}
